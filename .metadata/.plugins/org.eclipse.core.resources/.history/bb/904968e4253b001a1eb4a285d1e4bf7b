package com.shd.server.logging ;
import java.io.IOException;
import java.util.Objects;
import java.util.logging.ConsoleHandler;
import java.util.logging.FileHandler;
import java.util.logging.Handler;
import java.util.logging.Logger;
public class LoggerRef {

	private final static String nameId="ServDisply" ;
	private static  Logger servLogDisply = null ;

	public static synchronized Logger  makeLogRef() 
	{
		
		// Create a FileHandler with 1MB file size and a single log file. 
        // make the handler to append the log message.
		String logFile ="C:/WebSockt_WrkDirec/Server/Logs/Logging.txt" ;
		Integer logFileSize= 1024*1024 ;
		servLogDisply = Logger.getLogger(nameId); 
		Objects.requireNonNull(servLogDisply, "NULL!! for servLogDisply" ) ;
		//assert loggerToUse != null ;
		servLogDisply.setUseParentHandlers(false) ;//No Console
		Handler[] handlers = servLogDisply.getHandlers();
		for(Handler handler : handlers) {
			servLogDisply.removeHandler(handler);
		}
		LogFormat logFrmt =new LogFormat() ;
		Handler  consoleHandler = new ConsoleHandler();
		consoleHandler.setFormatter(logFrmt);
		//consoleHandler.setLevel(Level.ALL);
		servLogDisply.addHandler(consoleHandler);
		//
		FileHandler fileTxt = null;
		try {
			fileTxt = new FileHandler(logFile,logFileSize,10, false);
		} catch (SecurityException | IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			throw new RuntimeException("Problems with creating the log files:\n" + e);
		}
		
        fileTxt.setFormatter(logFrmt);
		servLogDisply.addHandler(fileTxt) ;
		//
		return servLogDisply ;


	}

}