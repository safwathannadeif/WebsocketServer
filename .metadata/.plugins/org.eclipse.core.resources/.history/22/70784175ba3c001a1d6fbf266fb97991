package com.shd.server.startup;

import java.util.Collections;
import java.util.HashSet;
import java.util.Set;

import javax.websocket.Endpoint;
import javax.websocket.server.ServerApplicationConfig;
import javax.websocket.server.ServerEndpointConfig;

import com.shd.server.Ref2Singleton;


public class ServerApplicationConfigImp implements ServerApplicationConfig { 

    @Override
    public Set<ServerEndpointConfig> getEndpointConfigs(Set<Class<? extends Endpoint>> endpointClasses) {
     
        Set<ServerEndpointConfig> result = new HashSet<>();
        
                ServerEndpointConfig servEndPtsTest4 = ServerEndpointConfig.Builder.create(ServerEndPtTest4.class, "/test4").build();
                ServerEndpointConfig serverEndPt1 = ServerEndpointConfig.Builder.create(ServerEndPt1.class, "/test2").build();
                result.add(servEndPtsTest4);
                result.add(serverEndPt1) ; 
                Ref2Singleton.ONEINSREF.getServLogger().info("ServerApplicationConfigImp is Completed") ;   
        return result;
    }

    @Override
    public Set<Class<?>> getAnnotatedEndpointClasses(Set<Class<?>> scanned) {
        return Collections.emptySet();
    }
 public Set<Class<? extends Endpoint>> makeEndpointClasses()
 {
	 Set<Class<? extends Endpoint>> retSet = new HashSet<>();
	 retSet.add( ServerEndPtTest4.class) ;
	 getEndpointConfigs(retSet) ;
	 return retSet ;
 }
}
//https://tyrus-project.github.io/documentation/1.13.1/user-guide.html#websocket-programmatic-endpoint
//  Deployment of Annotated Endpoint Using ServerContainer