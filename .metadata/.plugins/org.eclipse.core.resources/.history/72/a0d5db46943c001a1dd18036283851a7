package com.shd.server.startup;
//https://abhirockzz.wordpress.com/2015/12/31/programmatic-websocket-endpoints-in-java-ee-7/
import java.io.IOException;
import java.lang.annotation.Annotation;
import java.util.List;
import java.util.Map;

import javax.websocket.Decoder;
import javax.websocket.Encoder;
import javax.websocket.Endpoint;
import javax.websocket.EndpointConfig;
import javax.websocket.Extension;
import javax.websocket.MessageHandler;
import javax.websocket.server.ServerEndpoint;
import javax.websocket.server.ServerEndpointConfig.Configurator;
import javax.websocket.Session;


	public class ProgrammaticEchoEnpoint extends Endpoint {
	    
	    @Override
	    public void onOpen(Session session, EndpointConfig config) {
	    	session.addMessageHandler(handler);
	        System.out.println("Peer " + session.getId() + " connected with RequestURI [" + session.getRequestURI() +"]");
	        System.out.println("EndpointConfig=" + config.toString()) ;
	        session.addMessageHandler(ExtMessageHandler);
	        session.addMessageHandler(new MessageHandler.Whole<String>() {
	            @Override
	            public void onMessage(String message) {
	                try {
	                	 System.out.println("inMessage=" + message ) ;
	                    session.getBasicRemote().sendText("Got message from " + session.getId() + "\n" + message);
	                } catch (IOException ex) {
	                }
	            }
	        });
	    }
	    private MessageHandler  getMsgH1()
	    {
	    	MessageHandler msgH = new MessageHandler.Whole<String>() {
	    		
			};
	    	
	    }
	}	    